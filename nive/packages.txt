Package reorganisation
----------------------

nive.cms    ->  nive_cms

nive.userdb ->  nive_userdb

nive.datastore ->  nive_datastore

nive.locale ->  nive.locale (reform.)
            ->  nive_cms.locale (cms.)
            ->  nive_userdb.locale (userdb.)
            ->  nive_datastore.locale (datastore.)

nive.cms.workflow -> nive.workflow

nive.components.objects [part 2] -> nive_cms.extensions.baseobjects

nive.components.extensions.fulltextpage -> nive_cms.extensions.fulltextpage

nive.components.extensions.images -> nive_cms.extensions.images

nive.components.extensions.pages -> nive_cms.extensions.pages

nive.components.extensions.path -> nive_cms.extensions.path

nive.components.extensions.sessionuser -> nive_userdb.sessionuser


Renaming
------
nive.definitions.ObjectConf.workflowDisabled -> nive.definitions.ObjectConf.workflowEnabled
nive.definitions.RootConf.workflowDisabled -> nive.definitions.RootConf.workflowEnabled


Cleanup
---------------------------



removed 'bw' marked functions:
---------------------------------
utils.path.DvDirCleaner
utils.datapool2.bakupSQL
utils.datapool2.PoolBakup

application.Registration
    def Include(self, module, **kw):  -> Register()
        Register database conf as part of app conf, not by calling Register() !!!
    def LoadConfiguration(self):  -> SetupRegistry()

application.Application
    def NewDBConnection(self):
    def ConvertID(self, id):
    def GetCountEntries(self):

application.Root
    def LookupTitle()

views
    def AuthenticatedUserName(request):
    def forbidden_view(request):
    
view.BaseView
    def Relocated(self):
    def AjaxRelocate(self, url, messages=None, slot="", raiseException=False):

events.Event
    def RegisterEvent(self, signal, function):
    def RemoveEvent(self, signal, function):
