# -*- coding: utf-8 -*-
#----------------------------------------------------------------------
# Poolyx CMS
# Copyright (C) 2012  Arndt Droullier, DV Electric, info@dvelectric.com
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#----------------------------------------------------------------------

__doc__ = """
Poolyx CMS default configuration

This file links together all modules included in a default Poolyx installation.

Minimal local system configuration (sqlite example) and usage
------------------------------------------------------
::
    
    from Poolyx.definitions import AppConf, DatabaseConf

    app = AppConf("Poolyx.cms.app",
                  id = "website",
                  title = "My website",
                  dbConfiguration = DatabaseConf(
                       fileRoot="/var/opt/website",
                       context=u"Sqlite3",
                       dbName="/var/opt/website/website.db")
    )
    design = ViewModuleConf("Poolyx.cms.design.view")
    app.modules.append(design)

- Groups: *group:editor, group:author, group:admin*
- Additional meta fields: *Permission (pool_groups)* Object only displayed to users in 
  the selected group

A design is not included by default. The default can simply be included with the 
following line ::

    app.modules.append("Poolyx.cms.design.view")

To include a customized copy of the design use ::

    design = ViewModuleConf("Poolyx.cms.design.view")
    # design customizations here
    design.static = "mywebsite:static" 
    # add to website
    app.modules.append(design)

This will replace the static directory of the design with your own directory. However, now you will
have to add the required css, images and javascript used by the templates to the new folder.
(For a start just copy the contents of ``Poolyx.cms.design:static``.)
"""

from Poolyx.i18n import _
from Poolyx.definitions import implements, Interface, AppConf, FieldConf, GroupConf
from Poolyx.security import *
from Poolyx.components.objects.base import ApplicationBase

#@poolyx_module
configuration = AppConf()
configuration.id = "website"
configuration.title = u"Poolyx CMS"
configuration.context = "Poolyx.cms.app.WebsitePublisher"
configuration.workflowEnabled = True

configuration.modules = [
    # objects
    "Poolyx.cms.box", "Poolyx.cms.column", "Poolyx.cms.menublock", "Poolyx.cms.file", 
    "Poolyx.cms.image", "Poolyx.cms.media", "Poolyx.cms.note", "Poolyx.cms.text",
    "Poolyx.cms.news", "Poolyx.cms.spacer", "Poolyx.cms.link", "Poolyx.cms.code", 
    # page, root
    "Poolyx.cms.root", "Poolyx.cms.page", 
    # cms editor
    "Poolyx.cms.cmsview.cmsroot",
    # design: not included by default
    #"Poolyx.cms.design.view"
    # workflow
    "Poolyx.cms.workflow.wf.wfProcess", "Poolyx.cms.workflow.view",
    # tools
    "Poolyx.components.tools.dbStructureUpdater", "Poolyx.components.tools.dbSqldataDump",
    # administration and persistence
    "Poolyx.adminview.view","Poolyx.components.extensions.persistence.dbPersistenceConfiguration"
]

configuration.meta = [
    FieldConf(id="pool_groups", datatype="mcheckboxes", size=250, default="", 
              name=_(u"Permission"), description=_(u"Only displayed to users in the selected group"))
]

configuration.acl = [
    (Allow, Everyone, 'view'),
    (Allow, 'group:editor', 'read'),
    (Allow, 'group:editor', 'add'),
    (Allow, 'group:editor', 'edit'), 
    (Allow, 'group:editor', 'delete'), 
    (Allow, 'group:editor', 'publish'), 
    (Allow, 'group:editor', 'revoke'), 
    (Allow, 'group:author', 'read'),
    (Allow, 'group:author', 'add'),
    (Allow, 'group:author', 'edit'), 
    (Allow, 'group:author', 'delete'), 
    (Allow, 'group:reviewer', 'read'),
    (Allow, 'group:reviewer', 'publish'),
    (Allow, 'group:reviewer', 'revoke'), 
    (Allow, 'group:reader', 'read'),
    (Allow, 'group:admin', ALL_PERMISSIONS), 
    (Deny, Everyone, ALL_PERMISSIONS),
]

configuration.groups = [ 
    GroupConf(id="group:editor", name="group:editor"),
    GroupConf(id="group:author", name="group:author"),
    GroupConf(id="group:reviewer", name="group:reviewer"),
    GroupConf(id="group:reader", name="group:reader"),
    GroupConf(id="group:admin",  name="group:admin"),
]


class IWebsite(Interface):
    """ """

class ICMSRoot(Interface):
    """ """

class IWebsiteRoot(Interface):
    """ """



class WebsitePublisher(ApplicationBase):
    """ the main cms application class """
    implements(IWebsite)
    
    
