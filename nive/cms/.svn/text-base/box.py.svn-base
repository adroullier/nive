#----------------------------------------------------------------------
# Poolyx CMS
# Copyright (C) 2012  Arndt Droullier, DV Electric, info@dvelectric.com
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#----------------------------------------------------------------------
__doc__ = """
Box
----
A box is a container to group elements on a page. It can be used as an
advanced styling element for web pages. The box itself only stores a title and a css class.
"""

from Poolyx.i18n import _
from Poolyx.definitions import StagPage, StagPageElement, ObjectConf, FieldConf
from Poolyx.components.objects.base import PageElementContainerBase


class box(PageElementContainerBase):

    def IsContainer(self):
        #
        return True

    
    def GetPage(self):
        # return the current element container
        return self.GetParent()


    def GetElementContainer(self):
        # return the current element container
        return self #.GetParent()

    
    def GetContainer(self):
        # return the current element container
        return self.GetParent()




#@poolyx_module
configuration =  ObjectConf(
    id = "box",
    name = _(u"Box"),
    dbparam = "box",
    context = "Poolyx.cms.box.box",
    template = "box.pt",
    selectTag = StagPageElement,
    container = True,
    description = _(u"A box is a container to group elements on a page. It can be used as an" 
                    u"advanced styling element for web pages. The box itself only stores a title and styling selector.")
)

# data definition ------------------------------------------------------------------
css =[  {'id': u'cols1_2', 'name': _(u'50 % width left')},
        {'id': u'cols1_3', 'name': _(u'33 % width left')},
        {'id': u'cols2_3', 'name': _(u'66 % width left')},
        {'id': u'colsRight1_2', 'name': _(u'50 % width right')},
        {'id': u'colsRight1_3', 'name': _(u'33 % width right')},
        {'id': u'colsRight2_3', 'name': _(u'66 % width right')},
]

configuration.data = [
    FieldConf(id="cssClass", datatype="list", size=10, default=u"", listItems=css, 
              name=_(u"Size and alignment"), description=u"")
]    


fields = ["title", "cssClass", "pool_groups"]
configuration.forms = {"create": {"fields":fields}, "edit": {"fields":fields}}

configuration.views = []



    
